The ``101-lazy_matrix_mul`` module
======================

Using ``lazy_matrix_mul``
-------------------

This is an example text file in reStructuredText format.  First import
``lazy_matrix_mul`` from the ``101-lazy_matrix_mul`` module:

    >>> lazy_matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul

Now use it:

    >>> lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
    array([[ 7, 10],
           [15, 22]])

    >>> lazy_matrix_mul([[1, 0, 2], [0, 2, 0], [0, 1, 3]], [[5], [-1], [0]])
    array([[ 5],
           [-2],
           [-1]])

    >>> lazy_matrix_mul([[1, -1, 1], [2, 2, 3], [-2, -3, -1]], [[1, 0, 4], [0, 2, 5], [1, 3, 0]])
    array([[  2,   1,  -1],
           [  5,  13,  18],
           [ -3,  -9, -23]])

    >>> lazy_matrix_mul([[1, 2], [0, -1], [0, 1]], [[0, 3, 0], [3, 0, 3]])
    array([[ 6,  3,  6],
           [-3,  0, -3],
           [ 3,  0,  3]])

    >>> lazy_matrix_mul([3, 4], [[1, 2], [3, 4]])
    Traceback (most recent call last):
    TypeError: m_a must be a list of lists

    >>> lazy_matrix_mul([[1, 2], [3, 4]], [3, 4])
    Traceback (most recent call last):
    TypeError: m_b must be a list of lists

    >>> lazy_matrix_mul([[1, 2], [3, 4]], [])
    Traceback (most recent call last):
    TypeError: m_b must be a list of lists

    >>> lazy_matrix_mul([], [[3, 4]])
    Traceback (most recent call last):
    TypeError: m_a must be a list of lists

    >>> lazy_matrix_mul(None)
    Traceback (most recent call last):
    TypeError: lazy_matrix_mul() missing 1 required positional argument: 'm_b'

    >>> lazy_matrix_mul([[1, 2], [3, 4]], [[4, 5], []])
    Traceback (most recent call last):
    ValueError: m_b can't be empty

    >>> lazy_matrix_mul([[1, 2], [3, 4]], [[]])
    Traceback (most recent call last):
    ValueError: m_b can't be empty

    >>> lazy_matrix_mul([[]], [[1, 2], [3, 4]])
    Traceback (most recent call last):
    ValueError: m_a can't be empty

    >>> lazy_matrix_mul([[3, 5], []], [[1, 2], [3, 4]])
    Traceback (most recent call last):
    ValueError: m_a can't be empty

    >>> lazy_matrix_mul([[1, 2], [3, 4]],  "Hola")
    Traceback (most recent call last):
    TypeError: m_b must be a list

    >>> lazy_matrix_mul(([1, 2], "Mundo"), [[1, 2], [3, 4]])
    Traceback (most recent call last):
    TypeError: m_a must be a list

    >>> lazy_matrix_mul([[1, 2], [3, 'J']], [[1, 2], [3, 4]])
    Traceback (most recent call last):
    TypeError: m_a should contain only integers or floats

    >>> lazy_matrix_mul([[1, 2], [3, 4]], [['R', 2], [3, 4]])
    Traceback (most recent call last):
    TypeError: m_b should contain only integers or floats

    >>> lazy_matrix_mul([[1, 2, 3], [3, 4, 5]], [[1, 2], [3, 4]])
    Traceback (most recent call last):
    ValueError: m_a and m_b can't be multiplied
